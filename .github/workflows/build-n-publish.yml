name: Build and Publish NuGet Package

on:
  push:
    tags:
      - '*'

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - id: cosmium-dl
      name: Download latest cosmium build
      uses: robinraju/release-downloader@v1.11
      with:
        repository: 'pikami/cosmium'
        latest: true
        fileName: '*_shared-libraries.tar.gz'
        out-file-path: 'shared-library_dist'
        extract: true

    - name: Move cosmium shared libraries
      run: |
        echo "This release includes ${{steps.cosmium-dl.outputs.tag_name}} of cosmium"

        echo "Moving shared libraries to cosmium_dist..."
        mv ./shared-library_dist/cosmium_*_shared-libraries/sharedlibrary_dist cosmium_dist

        rm -rf ./shared-library_dist

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: |
          6.0.x
          8.0.x
          9.0.x

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --no-restore

    - name: Test
      run: dotnet test --no-build --verbosity normal

    - name: Get version from tag
      id: version
      run: echo "version=$(echo ${GITHUB_REF#refs/tags/})" >> $GITHUB_OUTPUT

    - name: Pack NuGet package
      run: dotnet pack --configuration Release --output nupkgs -p:PackageVersion=${{ steps.version.outputs.version }}

    - name: Check if tag is pre-release
      id: check_prerelease
      run: |
        is_prerelease=$(echo "${{ steps.version.outputs.version }}" | grep -q -E "(-|_|\.)(alpha|beta|rc)" && echo true || echo false)
        echo "is_prerelease=$is_prerelease" >> $GITHUB_OUTPUT

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        files: nupkgs/*.nupkg
        prerelease: ${{ steps.check_prerelease.outputs.is_prerelease }}
        fail_on_unmatched_files: true
        generate_release_notes: true
        append_body: true
        body: |
          This release includes ${{steps.cosmium-dl.outputs.tag_name}} of cosmium

    - name: Publish NuGet package
      run: dotnet nuget push nupkgs/*.nupkg --source https://api.nuget.org/v3/index.json --api-key ${{ secrets.NUGET_API_KEY }}
